classdef UipanelConverter < appmigration.internal.ComponentConverter
    %   UIPANELCONVERTER Converts a uipanel to equivalent App Designer
    %   component.
    
    %   Copyright 2017-2020 The MathWorks, Inc.
    
    methods
        function [componentCreationFunction, issues] = getComponentCreationFunction(~, ~)
            
            % Create the appropriate App Designer Component
            componentCreationFunction = @uipanel;
            issues = [];
        end
        
        function propertyValuePairs = getComponentCreationPropertyValuePairs(~, ~)
            propertyValuePairs = {};
        end
        
        function conversionFuncs = getCallbackConversionFunctions(~, ~)
            import appmigration.internal.CommonCallbackConversionUtil;
            
            conversionFuncs = {...
                {'ButtonDownFcn'    , @CommonCallbackConversionUtil.convertOneToOneCallback},...
                {'CreateFcn'        , @CommonCallbackConversionUtil.convertCreateFcn},...
                {'DeleteFcn'        , @CommonCallbackConversionUtil.convertDeleteFcn},...
                {'SizeChangedFcn'   , @CommonCallbackConversionUtil.convertSizeChangedFcn},...
                };
        end
        
        function conversionFuncs = getPropertyConversionFunctions(~)
            import appmigration.internal.CommonPropertyConversionUtil;
            
            conversionFuncs = {...
                {'BackgroundColor'    , @CommonPropertyConversionUtil.convertBackgroundColor},...
                {'BorderType'         , @CommonPropertyConversionUtil.convertBorderType},...
                {'BusyAction'         , @CommonPropertyConversionUtil.convertOneToOneProperty},...
                {'ContextMenu'        , @CommonPropertyConversionUtil.convertContextMenu},...
                {'FontAngle'          , @CommonPropertyConversionUtil.convertFontAngle},...
                {'FontName'           , @CommonPropertyConversionUtil.convertFontName},...
                {'FontSize'           , @CommonPropertyConversionUtil.convertFontSize},...
                {'FontWeight'         , @CommonPropertyConversionUtil.convertFontWeight},...
                {'ForegroundColor'    , @CommonPropertyConversionUtil.convertForegroundColor},...
                {'HandleVisibility'   , @CommonPropertyConversionUtil.convertOneToOneProperty},...
                {'Interruptible'      , @CommonPropertyConversionUtil.convertOneToOneProperty},...
                {'Position'           , @CommonPropertyConversionUtil.convertPosition},...
                {'Tag'                , @CommonPropertyConversionUtil.convertOneToOneProperty},...
                {'Title'              , @CommonPropertyConversionUtil.convertTitle},...
                {'TitlePosition'      , @CommonPropertyConversionUtil.convertTitlePosition},...
                {'UserData'           , @CommonPropertyConversionUtil.convertUserData},...
                {'Visible'            , @CommonPropertyConversionUtil.convertOneToOneProperty},...
                };
            % Properties Implicitly Converted
            %   FontUnits - set to 'pixels' by ComponentConverter.convert()
            %   because this needs to be done prior to doing any conversions.
            %   Parent - set by ComponentCovnerter.convert()
            %   Units - set to 'pixels' by ComponentConverter.convert()
            %       because this needs to be done prior to doing any
            %       conversions.
            
            % Properties NOT converted and NOT reported:
            %   Not Applicable/Dropped
            %       BeingDeleted - Read-only
            %       BorderWidth - Dropped
            %       Children - Dropped
            %       Clipping - Dropped
            %       HighlightColor - Dropped
            %       InnerPosition - Same as position
            %       OuterPosition - Same as position
            %       ShadowColor - Dropped
            %       Type - Read-only
            
        end
    end
end